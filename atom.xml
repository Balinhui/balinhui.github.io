<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Balinhui的博客</title>
  
  <subtitle>以最美好的祝福祝愿你</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-06-28T09:12:24.613Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Balinhui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ai API for Java</title>
    <link href="http://example.com/2025/06/05/AiAPIForJava/"/>
    <id>http://example.com/2025/06/05/AiAPIForJava/</id>
    <published>2025-06-05T14:50:44.000Z</published>
    <updated>2025-06-28T09:12:24.613Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个通过Java调用如deepseek等ai的工具，使用十分简单。<br />Github: <a href="https://github.com/Balinhui/ai-api-for-java">https://github.com/Balinhui/ai-api-for-java</a></p><h1 id="使用列"><a class="markdownIt-Anchor" href="#使用列"></a> 使用列：</h1><h2 id="普通调用未开启stream流"><a class="markdownIt-Anchor" href="#普通调用未开启stream流"></a> 普通调用，未开启stream流</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.balinhui.core.Client;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.core.ResponseList;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.Request;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.Response;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.widgets.Message;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UseAPI</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Message</span> <span class="variable">system</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>(Message.SYSTEM, <span class="string">&quot;你是一个猫娘&quot;</span>);</span><br><span class="line">        <span class="type">Message</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>(Message.USER, <span class="string">&quot;你好&quot;</span>);</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>(<span class="string">&quot;a model&quot;</span>, system, user);</span><br><span class="line">        <span class="type">Client</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Client</span>(<span class="string">&quot;Your API_URL&quot;</span>, <span class="string">&quot;Your API_KEY&quot;</span>, request);</span><br><span class="line">        ResponseList&lt;Response&gt; responseList = client.getResponseList();</span><br><span class="line">        System.out.println(responseList.getFirst().getChoices()[<span class="number">0</span>].getMessage().getContent());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//或者</span></span><br><span class="line">        ResponseList&lt;Response&gt; responseList1 = client.getResponseList(System.out::print);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="普通调用开启stream流"><a class="markdownIt-Anchor" href="#普通调用开启stream流"></a> 普通调用，开启stream流</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.balinhui.core.Client;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.core.Client;<span class="keyword">import</span> org.balinhui.core.Client;<span class="keyword">import</span> org.balinhui.core.ResponseList;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.Request;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.Response;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.widgets.Message;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UseAPI</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Message</span> <span class="variable">system</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>(Message.SYSTEM, <span class="string">&quot;你是一个猫娘&quot;</span>);</span><br><span class="line">        <span class="type">Message</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>(Message.USER, <span class="string">&quot;你好&quot;</span>);</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>(<span class="string">&quot;a model&quot;</span>, <span class="literal">true</span>, system, user);</span><br><span class="line">        <span class="type">Client</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Client</span>(<span class="string">&quot;Your API_URL&quot;</span>, <span class="string">&quot;Your API_KEY&quot;</span>, request);</span><br><span class="line">        ResponseList&lt;Response&gt; list = client.getResponseList(response -&gt; System.out.print(response.getChoices()[<span class="number">0</span>].getDelta().getContent()));</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="内容"><a class="markdownIt-Anchor" href="#内容"></a> 内容</h1><h2 id="package"><a class="markdownIt-Anchor" href="#package"></a> package</h2><h3 id="core项目中主要的功能"><a class="markdownIt-Anchor" href="#core项目中主要的功能"></a> core(项目中主要的功能)</h3><blockquote><p>Client: 发送请求Request并返回响应Response<br><br />Client中<code>API_KEY</code>，<code>API_URL</code>和<code>Request</code>必须设置，传入参数后，用<code>getResponseList</code>取得响应<br><br />可以为<code>getResponseList</code>传入OnAddAction的实现类来设置每接收到响应的处理方法（一般用于开启了Stream），也可以等待返回ResponseList后对其处理（一般用于未开启Stream）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Client</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Client</span>(<span class="string">&quot;URL&quot;</span>, <span class="string">&quot;KEY&quot;</span>, request);</span><br><span class="line">ResponseList&lt;Response&gt; responseList =  client.getResponseList();<span class="comment">//对responseList处理</span></span><br><span class="line"><span class="comment">//或</span></span><br><span class="line">client.getResponseList(response -&gt; &#123;</span><br><span class="line">  <span class="comment">//TODO 对每次得到的response处理</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注意！！！每次调用Call中的getResponseList()等方法时，都会创建一个新请求并发送，请不要将此放入循环中</p></blockquote><blockquote><p>OnAddAction: 在Response被添加进ResponseList时调用，实现它即可实现添加后的操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.balinhui.core.OnAddAction;</span><br><span class="line"><span class="keyword">import</span> org.balinhui.json.Response;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ActionImp</span> <span class="keyword">implements</span> <span class="title class_">OnAddAction</span>&lt;Response&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onAdd</span><span class="params">(Response response)</span> &#123;</span><br><span class="line">          <span class="comment">//TODO 处理response</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>ResponseList: 用于存response的集合</p></blockquote><h3 id="exception异常"><a class="markdownIt-Anchor" href="#exception异常"></a> exception(异常)</h3><blockquote><p>DuplicateAdditionException: 在使用Loader重复加载对话时抛出。所以请小心使用哦~</p></blockquote><h3 id="jsonjava类与json的互相转换通过jackson"><a class="markdownIt-Anchor" href="#jsonjava类与json的互相转换通过jackson"></a> json(Java类与json的互相转换，通过<a href="https://github.com/FasterXML/jackson-databind"><code>jackson</code></a>)</h3><blockquote><p>widgets: 里面都是一些json实例化Java对象的小组件其中较为重要的是Message，不但用于接收响应的实列化对象，而且可以通过实列化对象转化成请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Message</span> <span class="variable">massage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Message</span>(Message.USER, <span class="string">&quot;你好&quot;</span>);</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Request: 发送的请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>(<span class="string">&quot;model&quot;</span>, message);</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Response: 接收的响应，一般在ResponseList中取得</p></blockquote><blockquote><p>Wrong: 部分报错信息</p></blockquote><h3 id="util工具"><a class="markdownIt-Anchor" href="#util工具"></a> util(工具)</h3><blockquote><p>Loader: 加载历史对话，与LogFile中的<code>getLogList()</code>使用。<code>load(int i)</code>需要传入<code>getLogList()</code>的索引</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(LogFile.getLogList());</span><br><span class="line">Loader.getLoader.load(<span class="number">0</span>);</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Logger: 将字符串存入<code>ai.log.md</code>文件</p></blockquote><blockquote><p>Store: 保存对话记录。要开启此功能需要设置Client中的<code>ableStore</code>为<code>true</code>。</p></blockquote><blockquote><p>Reader: 可以用于加载配置，输入一个格式为apiKey=…，apiUrl=…的.properties文件，用<code>getConfig</code>获取。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是一个通过Java调用如deepseek等ai的工具，使用十分简单。&lt;br /&gt;
Github: &lt;a href=&quot;https://github.com/Balinhui/ai-api-for-java&quot;&gt;https://github.com/Balinhui/ai-ap</summary>
      
    
    
    
    
    <category term="project" scheme="http://example.com/tags/project/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Markdown</title>
    <link href="http://example.com/2024/12/09/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Markdown/"/>
    <id>http://example.com/2024/12/09/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Markdown/</id>
    <published>2024-12-09T12:40:51.000Z</published>
    <updated>2025-04-13T13:44:19.783Z</updated>
    
    <content type="html"><![CDATA[<p>用于自己以后写Markdown</p><h1 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h1><p>用# （后面要有空格）来表示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h1 id="字体"><a class="markdownIt-Anchor" href="#字体"></a> 字体</h1><h2 id="斜体"><a class="markdownIt-Anchor" href="#斜体"></a> 斜体</h2><p><code>*这是斜体*</code> <em>这是斜体</em></p><p><code>_这是斜体_</code> <em>这是斜体</em></p><h2 id="粗体"><a class="markdownIt-Anchor" href="#粗体"></a> 粗体</h2><p><code>**这是粗体**</code> <strong>这是粗体</strong></p><p><code>__这是粗体__</code> <strong>这是粗体</strong></p><h2 id="粗斜体"><a class="markdownIt-Anchor" href="#粗斜体"></a> 粗斜体</h2><p><code>***这是粗斜体***</code> <em><strong>这是粗斜体</strong></em></p><p><code>___这是粗斜体___</code> <em><strong>这是粗斜体</strong></em></p><h1 id="换行"><a class="markdownIt-Anchor" href="#换行"></a> 换行</h1><ol><li>直接在一句话后敲两个空格</li><li>两句话之间加一个空行</li><li>如果你在编辑的时候，想让一行文字在显示的时候换行，就在中间加<code>&lt;br&gt;</code></li></ol><h1 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h1><p>用<code>&gt;</code>来表示引用，后面的空格可有可无，一行空格来结束引用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一个引用</span></span><br><span class="line">&gt;&gt; 这是一个引用中的引用</span><br><span class="line">&gt;&gt;&gt; 这是一个引用中的引用中的引用</span><br></pre></td></tr></table></figure><h1 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接名</span>](<span class="link">链接</span>)</span><br><span class="line">或</span><br><span class="line">&lt;链接&gt;</span><br><span class="line"></span><br><span class="line">[<span class="string">balinhui</span>](<span class="link">https://balinhui.github.io</span>)</span><br><span class="line">或</span><br><span class="line"><span class="language-xml">&lt;https://balinhui.github.io&gt;</span></span><br></pre></td></tr></table></figure><h1 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片描述，可写可不写，但是中括号要有</span>](<span class="link">图片链接，本地或URL#pic_center空格=长x宽</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">balinhui</span>](<span class="link">https://raw.githubusercontent.com/Balinhui/balinhui.github.io/refs/heads/main/covers/cover.webp#pic_center =200x100</span>)</span><br></pre></td></tr></table></figure><h1 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h1><h2 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h2><p>数字后加<code>.</code>再加空格</p><h2 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h2><p>用<code>*</code>,<code>+</code>,<code>-</code>,再加空格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 无序列表 1</span><br><span class="line"><span class="bullet">+</span> 无序列表 2</span><br><span class="line"><span class="bullet">-</span> 无序列表 3</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 有序列表 1</span><br><span class="line"><span class="bullet">2.</span> 有序列表 2</span><br><span class="line"><span class="bullet">3.</span> 有序列表 3</span><br></pre></td></tr></table></figure><p>控制层级</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+</span> 无序列表 1</span><br><span class="line"><span class="bullet">+</span> 无序列表 2</span><br><span class="line"><span class="bullet"> +</span> 无序列表 2.1</span><br><span class="line"><span class="bullet"> +</span> 无序列表 2.2</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 有序列表 1</span><br><span class="line"> 1.1 有序列表 1.1</span><br><span class="line"><span class="bullet">2.</span> 有序列表 2</span><br><span class="line"> 2.1 有序列表2.1</span><br></pre></td></tr></table></figure><h1 id="分割线"><a class="markdownIt-Anchor" href="#分割线"></a> 分割线</h1><p>用-或*，注意分割线上面要空格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">分割线：</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong">- - -</span></span><br><span class="line"><span class="strong">* * <span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><h1 id="删除线"><a class="markdownIt-Anchor" href="#删除线"></a> 删除线</h1><p>在要删除的文字左右两边加上<code>~~</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~要被删除的文字~~</span><br></pre></td></tr></table></figure><h1 id="下划线"><a class="markdownIt-Anchor" href="#下划线"></a> 下划线</h1><p>在要下划线的文字左右两边加上<code>&lt;u&gt;文本&lt;/u&gt;</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>要添加下划线的文本<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="代码块"><a class="markdownIt-Anchor" href="#代码块"></a> 代码块</h1><h2 id="一行代码"><a class="markdownIt-Anchor" href="#一行代码"></a> 一行代码</h2><p>将代码前后用`括起来</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`Hello`</span> World</span><br></pre></td></tr></table></figure><h2 id="一块代码"><a class="markdownIt-Anchor" href="#一块代码"></a> 一块代码</h2><p>要在代码前后用三个`，并在前三个后写下语言类型</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```java</span></span><br><span class="line"><span class="code">    public class HelloWorld &#123;</span></span><br><span class="line"><span class="code">        public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="code">            System.out.println(&quot;Hello World&quot;);</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">三个`</span></span><br></pre></td></tr></table></figure><h1 id="脚注"><a class="markdownIt-Anchor" href="#脚注"></a> 脚注</h1><p>对文本进行标注</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mackdown[^1],java[^2]</span><br><span class="line">[^1] Markdown</span><br><span class="line">[^2] java</span><br></pre></td></tr></table></figure><p>Mackdown[^1]<br />[^1] Markdown</p><h1 id="未完待续"><a class="markdownIt-Anchor" href="#未完待续"></a> 未完待续</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用于自己以后写Markdown&lt;/p&gt;
&lt;h1 id=&quot;标题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#标题&quot;&gt;&lt;/a&gt; 标题&lt;/h1&gt;
&lt;p&gt;用# （后面要有空格）来表示&lt;/p&gt;
&lt;figure class=&quot;highlight plain</summary>
      
    
    
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>移除C盘以外的Program_Files</title>
    <link href="http://example.com/2024/12/08/%E7%A7%BB%E9%99%A4C%E7%9B%98%E4%BB%A5%E5%A4%96%E7%9A%84Program-Files/"/>
    <id>http://example.com/2024/12/08/%E7%A7%BB%E9%99%A4C%E7%9B%98%E4%BB%A5%E5%A4%96%E7%9A%84Program-Files/</id>
    <published>2024-12-08T13:31:54.000Z</published>
    <updated>2025-04-13T13:44:57.414Z</updated>
    
    <content type="html"><![CDATA[<p>每当我在设置Xbox安装路径时，或者<s>不小心</s>更改了Microsoft Store中的应用的安装路径时，对应的盘下总会生成Program Files文件夹，而且还删不掉。我已知这个文件没用，又想把它删掉，那该怎么办呢？</p><h1 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h1><p>直接删除是没有用的，重启后还会回来<br></p><h2 id="获取所有卷信息"><a class="markdownIt-Anchor" href="#获取所有卷信息"></a> 获取所有卷信息</h2><p>可以打开PowerShell，以管理员身份运行，使用命令<code>Get-AppxVolume</code>查看WindowsApps挂载在哪些盘上</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Windows\System32&gt; <span class="built_in">Get-AppxVolume</span></span><br></pre></td></tr></table></figure><p>此时，除了C盘，还看到有其他盘挂载了WindowsApps</p><h2 id="删除不用的卷"><a class="markdownIt-Anchor" href="#删除不用的卷"></a> 删除不用的卷</h2><p>使用命令<code>Remove-AppxVolume -Volume</code>后面加上空格和前面的ID<code>&#123;d22g2f23ft-sdgay-26fg62-32dawf&#125;</code>或盘符<code>D:\</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Windows\System32&gt; <span class="built_in">Remove-AppxVolume</span> <span class="literal">-Volume</span> D:\</span><br></pre></td></tr></table></figure><p>回车后用<code>Get-AppxVolume</code>命令再次查看<br><br />只剩C盘后就说明成功</p><p>之后就是更改文件夹属性，然后删除就行了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;每当我在设置Xbox安装路径时，或者&lt;s&gt;不小心&lt;/s&gt;更改了Microsoft Store中的应用的安装路径时，对应的盘下总会生成Program Files文件夹，而且还删不掉。我已知这个文件没用，又想把它删掉，那该怎么办呢？&lt;/p&gt;
&lt;h1 id=&quot;解决方法&quot;&gt;&lt;a c</summary>
      
    
    
    
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2013/12/24/hello-world/"/>
    <id>http://example.com/2013/12/24/hello-world/</id>
    <published>2013-12-24T09:49:32.000Z</published>
    <updated>2025-04-13T13:52:15.833Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://zespia.tw/hexo">Hexo</a>! This is your very first post. Check <a href="http://zespia.tw/hexo/docs">documentation</a> to learn how to use.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://zespia.tw/hexo&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://zespia.tw/hexo/docs&quot;&gt;documentati</summary>
      
    
    
    
    
  </entry>
  
</feed>
